metadata:
  name: littlefoot
  description: just a remote controlled car powered by raspberry pi

# modules expose inputs and outputs from various sources
modules:
  local_server: 
    Server:
      port: 8080
      root_context: /
      inputs:
        drive:
          Float: { start: 0.0, min: -1, max: 1, step: 0.0009765625 }
        steer:
          Float: { start: 0.0, min: -1, max: 1, step: 0.0009765625 }
        pan: 
          Float: { start: 0, min: -1, max: 1, step: 0.0009765625 }
        pan_trim: 
          Float: { start: 0.0556640625, min: -1, max: 1, step: 0.0009765625 }
        tilt: 
          Float: { start: 0, min: -1, max: 1, step: 0.0009765625 }
        tilt_trim: 
          Float: { start: 0.67578125, min: -1, max: 1, step: 0.0009765625 }
        headlights:
          Float: { start: 0.5, min: 0, max: 1, step: 0.1 }
        taillights:
          Float: { start: 0.0, min: 0, max: 1, step: 0.1 }
        enable_camera:
          Bool: { start: true }
        mjpeg_quality:
          Float: { start: 50, min: 0, max: 100, step: 1 }
        camera_framerate:
          Float: { start: 5, min: 1, max: 60, step: 1 }
      outputs:
        gyroscope: Array
        magnetometer: Array
        accelerometer: Array
        temperature: Float 
        pressure: Float 
        heading: Float
        jpeg_frames: Binary
      endpoints: 
        "/": 
          Static:
            directory: "assets"
        "/ws":
          WebSocket: 
            inputs: [ pan, tilt, pan_trim, tilt_trim, drive, steer, headlights, taillights, enable_camera, mjpeg_quality, camera_framerate ]
            outputs: [ gyroscope, magnetometer, accelerometer, temperature, pressure, heading ]
        "/stream":
          Mjpeg:
            output: jpeg_frames
  pwm:
    Pca9685:
      i2c_bus: 0
      i2c_address: 0x40
      channels:
        pan_servo: 0
        tilt_servo: 1
        headlights: 2
        taillights: 3
        drive_enable: 4
        drive_rev: 5
        drive_fwd: 6
        steer_enable: 7
        steer_left: 8
        steer_right: 9

  camera:
    RaspiCam: {}

  press_temp:
    Bmp180:
      pressure_precision: Standard
      period_ms: 1000

  gyro:
    L3dg20:
      i2c_address: 0x6B

  mag_accel:
    Lsm303dlhc: {}



# transformers read from one or more inputs and produce one or more new inputs
transformers:
  pan_sum:
    Sum:
      inputs:
        - local_server.pan
        - local_server.pan_trim
  
  tilt_sum:
    Sum:
      inputs:
        - local_server.tilt
        - local_server.tilt_trim

  tilt_servo: 
    LinearTransform:
      input: tilt_sum.value 
      from: [-1, 1]
      to: [0.05, 0.15]
  
  pan_servo: 
    LinearTransform:
      input: pan_sum.value
      from: [-1, 1]
      to: [0.05, 0.15]

  drive_hbridge:
    HBridge:
      input: local_server.drive 
  
  steer_hbridge:
    HBridge:
      input: local_server.steer

  heading:
    Heading:
      input: mag_accel.magnetometer

# pipes read from inputs and write to outputs
pipes:
  - { from: pan_servo.value, to: pwm.pan_servo }
  - { from: tilt_servo.value, to: pwm.tilt_servo }

  - { from: drive_hbridge.forward, to: pwm.drive_fwd }
  - { from: drive_hbridge.reverse, to: pwm.drive_rev }
  - { from: drive_hbridge.enable, to: pwm.drive_enable }

  - { from: steer_hbridge.forward, to: pwm.steer_left}
  - { from: steer_hbridge.reverse, to: pwm.steer_right }
  - { from: steer_hbridge.enable, to: pwm.steer_enable }

  - { from: local_server.headlights, to: pwm.headlights }
  - { from: local_server.taillights, to: pwm.taillights }

  - { from: local_server.enable_camera, to: camera.enable }
  - { from: local_server.mjpeg_quality, to: camera.quality }
  - { from: local_server.camera_framerate, to: camera.framerate }

  - { from: press_temp.temperature_c, to: local_server.temperature }
  - { from: press_temp.pressure_h_pa, to: local_server.pressure }

  - { from: gyro.value, to: local_server.gyroscope }
  - { from: mag_accel.magnetometer, to: local_server.magnetometer }
  - { from: mag_accel.accelerometer, to: local_server.accelerometer }

  - { from: camera.mjpeg, to: local_server.jpeg_frames }

  - { from: heading.value, to: local_server.heading }
