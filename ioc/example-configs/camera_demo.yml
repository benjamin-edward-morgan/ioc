metadata:
  name: camera demo
  description: to test only the camera interface

# modules expose inputs and outputs from various sources
modules:
  local_server: 
    Server:
      port: 8080
      root_context: /
      inputs: 
        enable_camera: 
          Bool: { start: false }
        mjpeg_quality:
          Float: { start: 50, min: 0, max: 100, step: 1 }
        camera_framerate:
          Float: { start: 5, min: 1, max: 60, step: 1 }
        camera_resolution:
          String: 
            start: "640x480"
            max_length: 12
            choices: 
              "320x240": "320x240"
              "640x480": "640x480"
              "1280x720": "1280x720"
              "1920x1080": "1920x1080"
        camera_tuning_file:
          String:
            start: ""
            max_length: 1024
            choices:
              "none": ""
              "RpiCameraV2": "/usr/share/libcamera/ipa/rpi/vc4/imx219.json"
              "RpiCameraV2 - NoIR": "/usr/share/libcamera/ipa/rpi/vc4/imx219_noir.json"
              "Uncalibrated": "/usr/share/libcamera/ipa/rpi/vc4/uncalibrated.json"
      outputs:
        jpeg_frames: Binary
      endpoints: 
        "/ws":
          WebSocket: 
            inputs: [ enable_camera, mjpeg_quality, camera_framerate, camera_resolution, camera_tuning_file ]
            outputs: [ ]
        "/stream":
          Mjpeg:
            output: jpeg_frames
 
  camera:
    RaspiCam: {}

transformers: {}

# pipes read from inputs and write to outputs
pipes: 
  - { from: camera.mjpeg, to: local_server.jpeg_frames }
  - { from: local_server.enable_camera, to: camera.enable }
  - { from: local_server.mjpeg_quality, to: camera.quality }
  - { from: local_server.camera_framerate, to: camera.framerate }
  - { from: local_server.camera_resolution, to: camera.resolution }
  - { from: local_server.camera_tuning_file, to: camera.tuning_file }